//   Define the command and response opcodes used by this firmware.
//
//   This file must have no other dependencies so that it can be used in
//   isolation to export the command and response names and opcodes to elsewhere
//   without requiring the full firmware build environment to be set up.
//

//******************************************************************************
//
//   Command opcodes.
//
//   These are string constants named cmd_<commandname>.  Their contents is:
//
//     opc [entrypoint]
//
//   The integer opcode value is the first token, and is required.  The optional
//   second token is the entry point of the command routine to run for that
//   opcode.  The default is cm_<commandname>.
//
//   Examples
//
//     cmd_blork = "3"
//
//       Opcode 3, command routine "cm_blork".
//
//     cmd_barf = "7 gopuke"
//
//       Opcode 7, command routine "gopuke".
//
/const   cmd_nop = 0         ;NOP
/const   cmd_ping = 1        ;send PONG response
/const   cmd_fwinfo = 2      ;send FWINFO response, gives FW type, ver and seq
/const   cmd_vset = 3        ;set output voltage
/const   cmd_gvset = 4       ;get output votlage setting
/const   cmd_mval = 5        ;inquire measured values
/const   cmd_arm = 6         ;arm the trace mechanism
/const   cmd_trig = 7        ;artificially trigger the trace mechanism
/const   cmd_toff = 8        ;dis-arm the trace mechanism
/const   cmd_break = 9       ;set breakpoint-pending flag, for debugging

//******************************************************************************
//
//   Response opcodes.
//
//   These are integer constants named rsp_<responsename>.  The value of each
//   constant is the 0-255 opcode for that response.
//
/const   rsp_nop integer = 0 ;NOP
/const   rsp_pong integer = 1 ;PONG integer = sent in response to PING
/const   rsp_fwinfo integer = 2 ;FWINFO type version sequence
/const   rsp_vset integer = 3 ;output voltage setpoint
/const   rsp_mval integer = 4 ;measured analog values
/const   rsp_trace integer = 5 ;traced data dump
